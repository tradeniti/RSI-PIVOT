//@version=5
indicator("RSI Fibonacci Pivot V6 - RESET", overlay=true, max_labels_count=500, max_lines_count=500)

// ========== ‡§á‡§®‡§™‡•Å‡§ü ==========
fiblength = input.int(264, "Pivot Fibonacci Length", minval=1)
showTable = input.bool(true, "Show Position Table")
enableReentry = input.bool(true, "Enable Re-Entry Strategy")
enableShortAfterPrimaryLoss = input.bool(true, "Enable Short After Primary Loss")

// ========== Fibonacci Pivot Lines ==========
maxr = ta.highest(close, fiblength)
minr = ta.lowest(close, fiblength)
TOP_LINE = maxr
BOTTOM_LINE = minr
PIVOT_LINE = maxr - 0.50 * (maxr - minr)

// ========== Plot Lines ==========
plot(TOP_LINE, "Top", color.white, 2)
plot(PIVOT_LINE, "Pivot", color.white, 1)
plot(BOTTOM_LINE, "Bottom", color.white, 2)

// ========== RSI & SMA ==========
rsi = ta.rsi(close, 14)
sma2 = ta.sma(close, 2)

// ========== Position Tracking (LONG) ==========
var bool inPosition = false
var float buyEntry = na
var float stopLoss = na
var int slStage = 0
var bool lastTradeWasProfit = false
var bool primaryBlocked = false
var int secondaryConsecutiveLosses = 0
var int reentryConsecutiveLosses = 0
var bool bothStrategiesDisabled = false
var bool reentryDisabled = false
var bool currentTradeIsPrimary = false
var bool currentTradeIsSecondary = false
var bool currentTradeIsReentry = false

// ========================================
// ========== SHORT POSITION TRACKING ==========
// ========================================
var bool inShortPosition = false
var float shortEntry = na
var float shortStopLoss = na
var int shortEntryBar = na
// ========================================

// ========== Daily Reset ==========
newDay = ta.change(time("D"))
if newDay
    bothStrategiesDisabled := false
    secondaryConsecutiveLosses := 0
    reentryConsecutiveLosses := 0
    reentryDisabled := false

// ========== Tolerance Ranges ==========
toleranceAmount = BOTTOM_LINE * 0.004
upperTolerance = BOTTOM_LINE + toleranceAmount
lowerTolerance = BOTTOM_LINE - toleranceAmount

pivotRecoveryThreshold = PIVOT_LINE + (PIVOT_LINE * 0.003)
pivotReentryThreshold = PIVOT_LINE + (PIVOT_LINE * 0.002)

// ========== Plot Zones ==========
p1 = plot(upperTolerance, "Upper", color.new(color.green, 80), 1)
p2 = plot(lowerTolerance, "Lower", color.new(color.green, 80), 1)
fill(p1, p2, color.new(color.green, 90))

plot(pivotRecoveryThreshold, "Recovery", color.new(color.purple, 50), 2, plot.style_circles)
plot(pivotReentryThreshold, "Re-Entry", color.new(color.orange, 70), 1, plot.style_circles)
plot(sma2, "SMA2", color.new(color.yellow, 50), 1)

// ========== RECOVERY LOGIC ==========
sma2RecoveryCrossover = ta.crossover(sma2, pivotRecoveryThreshold)

if bothStrategiesDisabled and sma2RecoveryCrossover and not inPosition and not inShortPosition
    bothStrategiesDisabled := false
    primaryBlocked := false
    secondaryConsecutiveLosses := 0
    reentryConsecutiveLosses := 0
    reentryDisabled := false
    lastTradeWasProfit := false
    label.new(bar_index, high, text="üîÑ RESET", color=color.new(color.purple, 0), textcolor=color.white, style=label.style_label_down, size=size.small)

// ========== PRIMARY STRATEGY ==========
rsiInRange = rsi >= 20 and rsi <= 29
priceInRange = close >= lowerTolerance and close <= upperTolerance
PRIMARY_BUY = rsiInRange and priceInRange and not inPosition and not inShortPosition and not primaryBlocked and not bothStrategiesDisabled

// ========== SECONDARY STRATEGY (WITH FILTERS) ==========
sma2CrossoverBuy = ta.crossover(sma2, upperTolerance)

// NEW FILTERS
rsiNotOverbought = rsi <= 75
minDistanceFromPivot = (PIVOT_LINE - upperTolerance) >= 300

// UPDATED: Secondary can happen even when SHORT is active
SECONDARY_BUY_AFTER_LOSS = sma2CrossoverBuy and not inPosition and primaryBlocked and not bothStrategiesDisabled and rsiNotOverbought and minDistanceFromPivot
SECONDARY_BUY_AFTER_PROFIT = sma2CrossoverBuy and not inPosition and lastTradeWasProfit and not bothStrategiesDisabled and rsiNotOverbought and minDistanceFromPivot

SECONDARY_BUY = SECONDARY_BUY_AFTER_LOSS or SECONDARY_BUY_AFTER_PROFIT

// ========== RE-ENTRY STRATEGY ==========
noActivePosition = not inPosition and not inShortPosition
secondaryNotDisabled = not bothStrategiesDisabled
noPendingPrimarySecondary = not PRIMARY_BUY and not SECONDARY_BUY

sma2ReentryCrossover = ta.crossover(sma2, pivotReentryThreshold)
safetyCheck = close < (TOP_LINE - 200)

REENTRY_BUY = enableReentry and sma2ReentryCrossover and noActivePosition and secondaryNotDisabled and noPendingPrimarySecondary and safetyCheck and not reentryDisabled

// ========== BUY SIGNAL ==========
BUY_SIGNAL = PRIMARY_BUY or SECONDARY_BUY or REENTRY_BUY

// ========================================
// ========== SHORT STRATEGY SECTION (SEPARATE CODE) ==========
// ========================================

// SHORT Exit on SMA(2) crossover (SAME as Secondary Buy signal)
// This happens BEFORE the long entry
if inShortPosition and sma2CrossoverBuy
    // Close short position
    shortExitPrice = close
    shortPnl = shortEntry - shortExitPrice
    
    inShortPosition := false
    
    shortPnlSign = shortPnl > 0 ? "+" : ""
    shortLabel = "SHORT " + shortPnlSign + str.tostring(shortPnl, "#")
    shortLabelColor = shortPnl > 0 ? color.new(#15803D, 0) : color.new(#8B0000, 0)
    shortEmoji = shortPnl > 0 ? " ‚úÖ" : " ‚ùå"
    
    label.new(bar_index, low * 0.9985, text=shortLabel + shortEmoji, color=shortLabelColor, textcolor=color.white, style=label.style_label_up, size=size.small)
    
    shortEntry := na
    shortStopLoss := na
    shortEntryBar := na

// SHORT Stop Loss Hit
if inShortPosition and close >= shortStopLoss
    // Short SL hit (loss)
    shortExitPrice = close
    shortPnl = shortEntry - shortExitPrice
    
    inShortPosition := false
    
    label.new(bar_index, high, text="SHORT " + str.tostring(shortPnl, "#") + " ‚ùå", color=color.new(#8B0000, 0), textcolor=color.white, style=label.style_label_down, size=size.small)
    
    shortEntry := na
    shortStopLoss := na
    shortEntryBar := na

// Plot SHORT Lines
plot(inShortPosition ? shortStopLoss : na, "Short SL", color.orange, 2, plot.style_linebr)
plot(inShortPosition ? shortEntry : na, "Short Entry", color.purple, 1, plot.style_linebr)

// SHORT Shape on Chart
plotshape(inShortPosition and bar_index == shortEntryBar, title="Short Entry", style=shape.triangledown, location=location.abovebar, color=color.new(#8B0000, 0), size=size.normal)

// ========================================
// ========== END OF SHORT STRATEGY SECTION ==========
// ========================================

// ========== BUY EXECUTION ==========
if BUY_SIGNAL
    inPosition := true
    buyEntry := close
    slStage := 1
    
    if PRIMARY_BUY
        currentTradeIsPrimary := true
        currentTradeIsSecondary := false
        currentTradeIsReentry := false
        stopLoss := buyEntry - 500
        lastTradeWasProfit := false
        label.new(bar_index, low, text="üü¢ PRI", color=color.new(#006400, 0), textcolor=color.white, style=label.style_label_up, size=size.small)
    
    else if SECONDARY_BUY
        currentTradeIsPrimary := false
        currentTradeIsSecondary := true
        currentTradeIsReentry := false
        
        stopLoss := secondaryConsecutiveLosses >= 1 ? BOTTOM_LINE - 300 : BOTTOM_LINE - 400
        lastTradeWasProfit := false
        
        slIcon = secondaryConsecutiveLosses >= 1 ? "‚ö†Ô∏è" : ""
        label.new(bar_index, low, text="üîµ SEC " + slIcon, color=color.new(#00CED1, 0), textcolor=color.white, style=label.style_label_up, size=size.small)
    
    else if REENTRY_BUY
        currentTradeIsPrimary := false
        currentTradeIsSecondary := false
        currentTradeIsReentry := true
        stopLoss := PIVOT_LINE - 250
        slStage := 3
        lastTradeWasProfit := false
        label.new(bar_index, low, text="üü† RE", color=color.new(#CC5500, 0), textcolor=color.white, style=label.style_label_up, size=size.small)

// ========== TRAILING STOP LOGIC ==========
if inPosition
    if currentTradeIsPrimary
        if slStage == 1 and close > PIVOT_LINE
            stopLoss := PIVOT_LINE - 450
            slStage := 2
        
        if slStage == 2 and close >= (TOP_LINE - TOP_LINE * 0.004)
            slStage := 3
        
        if slStage == 3
            stopLoss := PIVOT_LINE - 250
    
    else if currentTradeIsSecondary
        if slStage == 1 and close >= (PIVOT_LINE - PIVOT_LINE * 0.004)
            stopLoss := BOTTOM_LINE - 200
            slStage := 2
        
        if slStage == 2 and close >= (TOP_LINE - TOP_LINE * 0.004)
            slStage := 3
        
        if slStage == 3
            stopLoss := PIVOT_LINE - 250
    
    else if currentTradeIsReentry
        stopLoss := PIVOT_LINE - 250

// ========== STOP LOSS HIT (LONG) ==========
if inPosition and close <= stopLoss
    exitPrice = close
    pnl = exitPrice - buyEntry
    
    string statusEmoji = ""
    bool primaryLossOccurred = false
    
    if pnl > 0
        lastTradeWasProfit := true
        secondaryConsecutiveLosses := 0
        reentryConsecutiveLosses := 0
        
        if currentTradeIsSecondary or currentTradeIsReentry
            primaryBlocked := false
            reentryDisabled := false
        
        statusEmoji := " ‚úÖ"
    
    else
        lastTradeWasProfit := false
        
        if currentTradeIsPrimary
            primaryBlocked := true
            secondaryConsecutiveLosses := 0
            primaryLossOccurred := true
            statusEmoji := " üü°"
        
        else if currentTradeIsSecondary
            secondaryConsecutiveLosses += 1
            
            if secondaryConsecutiveLosses >= 2
                bothStrategiesDisabled := true
                reentryDisabled := true
                statusEmoji := " üõë"
            else
                statusEmoji := " ‚ö†Ô∏è"
        
        else if currentTradeIsReentry
            reentryConsecutiveLosses += 1
            
            if reentryConsecutiveLosses >= 2
                reentryDisabled := true
                statusEmoji := " üî¥"
            else
                statusEmoji := " üü†"
    
    inPosition := false
    buyEntry := na
    stopLoss := na
    slStage := 0
    
    tradeName = currentTradeIsPrimary ? "PRI" : currentTradeIsSecondary ? "SEC" : "RE"
    pnlSign = pnl > 0 ? "+" : ""
    labelText = tradeName + " " + pnlSign + str.tostring(pnl, "#") + statusEmoji
    labelColor = pnl > 0 ? color.new(#006400, 0) : color.new(#8B0000, 0)
    
    label.new(bar_index, high, text=labelText, color=labelColor, textcolor=color.white, style=label.style_label_down, size=size.normal)
    
    currentTradeIsPrimary := false
    currentTradeIsSecondary := false
    currentTradeIsReentry := false
    
    // ========================================
    // ========== TRIGGER SHORT AFTER PRIMARY LOSS ==========
    // ========================================
    if primaryLossOccurred and enableShortAfterPrimaryLoss
        shortEntry := close
        shortStopLoss := close + 400
        inShortPosition := true
        shortEntryBar := bar_index
        label.new(bar_index, high * 1.001, text="üî¥ SHORT", color=color.new(#8B0000, 0), textcolor=color.white, style=label.style_label_down, size=size.small)
    // ========================================

// ========== PLOT SHAPES (LONG STRATEGIES) ==========
plotshape(PRIMARY_BUY, title="Primary", style=shape.triangleup, location=location.belowbar, color=color.new(#006400, 0), size=size.small)
plotshape(SECONDARY_BUY, title="Secondary", style=shape.triangleup, location=location.belowbar, color=color.new(#00CED1, 0), size=size.normal)
plotshape(REENTRY_BUY, title="Re-Entry", style=shape.triangleup, location=location.belowbar, color=color.new(#CC5500, 0), size=size.normal)

// ========== PLOT SL & ENTRY (LONG) ==========
plot(inPosition ? stopLoss : na, "Stop Loss", color.red, 2, plot.style_linebr)
plot(inPosition ? buyEntry : na, "Entry", color.blue, 1, plot.style_linebr)

// ========== TABLE ==========
if showTable
    var table t = table.new(position=position.bottom_right, columns=3, rows=2, border_width=2, border_color=color.new(#1E3A8A, 0))
    
    table.cell(t, 0, 0, text="LTP", text_color=color.white, bgcolor=color.new(#1E3A8A, 0), text_size=size.small)
    table.cell(t, 1, 0, text="STATUS", text_color=color.white, bgcolor=color.new(#1E3A8A, 0), text_size=size.small)
    table.cell(t, 2, 0, text="PNL", text_color=color.white, bgcolor=color.new(#1E3A8A, 0), text_size=size.small)
    
    table.cell(t, 0, 1, text=str.tostring(close, "#.##"), text_color=color.white, bgcolor=color.new(#374151, 0), text_size=size.large)
    
    strategyText = "READY"
    strategyColor = color.new(#1E40AF, 0)
    
    if bothStrategiesDisabled
        strategyText := "üõë STOP"
        strategyColor := color.new(#991B1B, 0)
    else if inShortPosition
        strategyText := "üî¥ SHORT"
        strategyColor := color.new(#8B0000, 0)
    else if inPosition
        if currentTradeIsPrimary
            strategyText := "üü¢ PRI"
            strategyColor := color.new(#15803D, 0)
        else if currentTradeIsSecondary
            strategyText := "üîµ SEC"
            strategyColor := color.new(#00CED1, 0)
        else if currentTradeIsReentry
            strategyText := "üü† RE"
            strategyColor := color.new(#C2410C, 0)
    else if primaryBlocked
        if reentryDisabled
            strategyText := "üü° SEC"
            strategyColor := color.new(#CA8A04, 0)
        else
            strategyText := "üü° S+R"
            strategyColor := color.new(#CA8A04, 0)
    else if lastTradeWasProfit
        strategyText := "‚úÖ ALL"
        strategyColor := color.new(#15803D, 0)
    
    table.cell(t, 1, 1, text=strategyText, text_color=color.white, bgcolor=strategyColor, text_size=size.large)
    
    currentPnL = 0.0
    if inPosition
        currentPnL := close - buyEntry
    else if inShortPosition
        currentPnL := shortEntry - close
    
    pnlColor = currentPnL > 0 ? color.new(#15803D, 0) : currentPnL < 0 ? color.new(#991B1B, 0) : color.new(#374151, 0)
    pnlSign = currentPnL > 0 ? "+" : ""
    table.cell(t, 2, 1, text=pnlSign + str.tostring(currentPnL, "#.##"), text_color=color.white, bgcolor=pnlColor, text_size=size.large)






















// // ========== ‡§á‡§®‡§™‡•Å‡§ü ==========
// fiblength = input.int(264, "Pivot Fibonacci Length", minval=1)
// showTable = input.bool(true, "Show Position Table")
// enableReentry = input.bool(true, "Enable Re-Entry Strategy")

// // ========== Fibonacci Pivot Lines ==========
// maxr = ta.highest(close, fiblength)
// minr = ta.lowest(close, fiblength)
// TOP_LINE = maxr
// BOTTOM_LINE = minr
// PIVOT_LINE = maxr - 0.50 * (maxr - minr)

// // ========== Plot Lines ==========
// plot(TOP_LINE, "Top", color.white, 2)
// plot(PIVOT_LINE, "Pivot", color.white, 1)
// plot(BOTTOM_LINE, "Bottom", color.white, 2)

// // ========== RSI & SMA ==========
// rsi = ta.rsi(close, 14)
// sma2 = ta.sma(close, 2)

// // ========== Position Tracking ==========
// var bool inPosition = false
// var float buyEntry = na
// var float stopLoss = na
// var int slStage = 0
// var bool lastTradeWasProfit = false
// var bool primaryBlocked = false
// var int secondaryConsecutiveLosses = 0
// var int reentryConsecutiveLosses = 0
// var bool bothStrategiesDisabled = false
// var bool reentryDisabled = false
// var bool currentTradeIsPrimary = false
// var bool currentTradeIsSecondary = false
// var bool currentTradeIsReentry = false

// // ========== Daily Reset ==========
// newDay = ta.change(time("D"))
// if newDay
//     bothStrategiesDisabled := false
//     secondaryConsecutiveLosses := 0
//     reentryConsecutiveLosses := 0
//     reentryDisabled := false

// // ========== Tolerance Ranges ==========
// toleranceAmount = BOTTOM_LINE * 0.004
// upperTolerance = BOTTOM_LINE + toleranceAmount
// lowerTolerance = BOTTOM_LINE - toleranceAmount

// pivotRecoveryThreshold = PIVOT_LINE + (PIVOT_LINE * 0.003)
// pivotReentryThreshold = PIVOT_LINE + (PIVOT_LINE * 0.002)

// // ========== Plot Zones ==========
// p1 = plot(upperTolerance, "Upper", color.new(color.green, 80), 1)
// p2 = plot(lowerTolerance, "Lower", color.new(color.green, 80), 1)
// fill(p1, p2, color.new(color.green, 90))

// plot(pivotRecoveryThreshold, "Recovery", color.new(color.purple, 50), 2, plot.style_circles)
// plot(pivotReentryThreshold, "Re-Entry", color.new(color.orange, 70), 1, plot.style_circles)
// plot(sma2, "SMA2", color.new(color.yellow, 50), 1)

// // ========== RECOVERY LOGIC ==========
// sma2RecoveryCrossover = ta.crossover(sma2, pivotRecoveryThreshold)

// if bothStrategiesDisabled and sma2RecoveryCrossover and not inPosition
//     bothStrategiesDisabled := false
//     primaryBlocked := false
//     secondaryConsecutiveLosses := 0
//     reentryConsecutiveLosses := 0
//     reentryDisabled := false
//     lastTradeWasProfit := false
//     label.new(bar_index, high, text="üîÑ RESET", color=color.new(color.purple, 0), textcolor=color.white, style=label.style_label_down, size=size.small)

// // ========== PRIMARY STRATEGY ==========
// rsiInRange = rsi >= 20 and rsi <= 29
// priceInRange = close >= lowerTolerance and close <= upperTolerance
// PRIMARY_BUY = rsiInRange and priceInRange and not inPosition and not primaryBlocked and not bothStrategiesDisabled

// // ========== SECONDARY STRATEGY (WITH FILTERS) ==========
// sma2CrossoverBuy = ta.crossover(sma2, upperTolerance)

// // NEW FILTERS
// rsiNotOverbought = rsi <= 75  // Don't buy if RSI > 75
// minDistanceFromPivot = (PIVOT_LINE - upperTolerance) >= 300  // Distance must be >= 300 points

// SECONDARY_BUY_AFTER_LOSS = sma2CrossoverBuy and not inPosition and primaryBlocked and not bothStrategiesDisabled and rsiNotOverbought and minDistanceFromPivot
// SECONDARY_BUY_AFTER_PROFIT = sma2CrossoverBuy and not inPosition and lastTradeWasProfit and not bothStrategiesDisabled and rsiNotOverbought and minDistanceFromPivot

// SECONDARY_BUY = SECONDARY_BUY_AFTER_LOSS or SECONDARY_BUY_AFTER_PROFIT

// // ========== RE-ENTRY STRATEGY ==========
// noActivePosition = not inPosition
// secondaryNotDisabled = not bothStrategiesDisabled
// noPendingPrimarySecondary = not PRIMARY_BUY and not SECONDARY_BUY

// sma2ReentryCrossover = ta.crossover(sma2, pivotReentryThreshold)
// safetyCheck = close < (TOP_LINE - 200)

// REENTRY_BUY = enableReentry and sma2ReentryCrossover and noActivePosition and secondaryNotDisabled and noPendingPrimarySecondary and safetyCheck and not reentryDisabled

// // ========== BUY SIGNAL ==========
// BUY_SIGNAL = PRIMARY_BUY or SECONDARY_BUY or REENTRY_BUY

// // ========== BUY EXECUTION ==========
// if BUY_SIGNAL
//     inPosition := true
//     buyEntry := close
//     slStage := 1
    
//     if PRIMARY_BUY
//         currentTradeIsPrimary := true
//         currentTradeIsSecondary := false
//         currentTradeIsReentry := false
//         stopLoss := buyEntry - 500
//         lastTradeWasProfit := false
//         label.new(bar_index, low, text="üü¢ PRI", color=color.new(#006400, 0), textcolor=color.white, style=label.style_label_up, size=size.small)
    
//     else if SECONDARY_BUY
//         currentTradeIsPrimary := false
//         currentTradeIsSecondary := true
//         currentTradeIsReentry := false
        
//         stopLoss := secondaryConsecutiveLosses >= 1 ? BOTTOM_LINE - 300 : BOTTOM_LINE - 400
//         lastTradeWasProfit := false
        
//         slIcon = secondaryConsecutiveLosses >= 1 ? "‚ö†Ô∏è" : ""
//         // UPDATED COLOR: Cyan for better visibility
//         label.new(bar_index, low, text="üîµ SEC " + slIcon, color=color.new(#00CED1, 0), textcolor=color.white, style=label.style_label_up, size=size.small)
    
//     else if REENTRY_BUY
//         currentTradeIsPrimary := false
//         currentTradeIsSecondary := false
//         currentTradeIsReentry := true
//         stopLoss := PIVOT_LINE - 250
//         slStage := 3
//         lastTradeWasProfit := false
//         label.new(bar_index, low, text="üü† RE", color=color.new(#CC5500, 0), textcolor=color.white, style=label.style_label_up, size=size.small)

// // ========== TRAILING STOP LOGIC ==========
// if inPosition
//     if currentTradeIsPrimary
//         if slStage == 1 and close > PIVOT_LINE
//             stopLoss := PIVOT_LINE - 450
//             slStage := 2
        
//         if slStage == 2 and close >= (TOP_LINE - TOP_LINE * 0.004)
//             slStage := 3
        
//         if slStage == 3
//             stopLoss := PIVOT_LINE - 250
    
//     else if currentTradeIsSecondary
//         if slStage == 1 and close >= (PIVOT_LINE - PIVOT_LINE * 0.004)
//             stopLoss := BOTTOM_LINE - 200
//             slStage := 2
        
//         if slStage == 2 and close >= (TOP_LINE - TOP_LINE * 0.004)
//             slStage := 3
        
//         if slStage == 3
//             stopLoss := PIVOT_LINE - 250
    
//     else if currentTradeIsReentry
//         stopLoss := PIVOT_LINE - 250

// // ========== STOP LOSS HIT ==========
// if inPosition and close <= stopLoss
//     exitPrice = close
//     pnl = exitPrice - buyEntry
    
//     string statusEmoji = ""
    
//     if pnl > 0
//         lastTradeWasProfit := true
//         secondaryConsecutiveLosses := 0
//         reentryConsecutiveLosses := 0
        
//         if currentTradeIsSecondary or currentTradeIsReentry
//             primaryBlocked := false
//             reentryDisabled := false
        
//         statusEmoji := " ‚úÖ"
    
//     else
//         lastTradeWasProfit := false
        
//         if currentTradeIsPrimary
//             primaryBlocked := true
//             secondaryConsecutiveLosses := 0
//             statusEmoji := " üü°"
        
//         else if currentTradeIsSecondary
//             secondaryConsecutiveLosses += 1
            
//             if secondaryConsecutiveLosses >= 2
//                 bothStrategiesDisabled := true
//                 reentryDisabled := true
//                 statusEmoji := " üõë"
//             else
//                 statusEmoji := " ‚ö†Ô∏è"
        
//         else if currentTradeIsReentry
//             reentryConsecutiveLosses += 1
            
//             if reentryConsecutiveLosses >= 2
//                 reentryDisabled := true
//                 statusEmoji := " üî¥"
//             else
//                 statusEmoji := " üü†"
    
//     inPosition := false
//     buyEntry := na
//     stopLoss := na
//     slStage := 0
    
//     tradeName = currentTradeIsPrimary ? "PRI" : currentTradeIsSecondary ? "SEC" : "RE"
//     pnlSign = pnl > 0 ? "+" : ""
//     labelText = tradeName + " " + pnlSign + str.tostring(pnl, "#") + statusEmoji
//     labelColor = pnl > 0 ? color.new(#006400, 0) : color.new(#8B0000, 0)
    
//     label.new(bar_index, high, text=labelText, color=labelColor, textcolor=color.white, style=label.style_label_down, size=size.normal)
    
//     currentTradeIsPrimary := false
//     currentTradeIsSecondary := false
//     currentTradeIsReentry := false

// // ========== PLOT SHAPES ==========
// plotshape(PRIMARY_BUY, title="Primary", style=shape.triangleup, location=location.belowbar, color=color.new(#006400, 0), size=size.small)
// plotshape(SECONDARY_BUY, title="Secondary", style=shape.triangleup, location=location.belowbar, color=color.new(#00CED1, 0), size=size.normal)
// plotshape(REENTRY_BUY, title="Re-Entry", style=shape.triangleup, location=location.belowbar, color=color.new(#CC5500, 0), size=size.normal)

// // ========== PLOT SL & ENTRY ==========
// plot(inPosition ? stopLoss : na, "Stop Loss", color.red, 2, plot.style_linebr)
// plot(inPosition ? buyEntry : na, "Entry", color.blue, 1, plot.style_linebr)

// // ========== TABLE ==========
// if showTable
//     var table t = table.new(position=position.bottom_right, columns=3, rows=2, border_width=2, border_color=color.new(#1E3A8A, 0))
    
//     table.cell(t, 0, 0, text="LTP", text_color=color.white, bgcolor=color.new(#1E3A8A, 0), text_size=size.small)
//     table.cell(t, 1, 0, text="STATUS", text_color=color.white, bgcolor=color.new(#1E3A8A, 0), text_size=size.small)
//     table.cell(t, 2, 0, text="PNL", text_color=color.white, bgcolor=color.new(#1E3A8A, 0), text_size=size.small)
    
//     table.cell(t, 0, 1, text=str.tostring(close, "#.##"), text_color=color.white, bgcolor=color.new(#374151, 0), text_size=size.large)
    
//     strategyText = "READY"
//     strategyColor = color.new(#1E40AF, 0)
    
//     if bothStrategiesDisabled
//         strategyText := "üõë STOP"
//         strategyColor := color.new(#991B1B, 0)
//     else if inPosition
//         if currentTradeIsPrimary
//             strategyText := "üü¢ PRI"
//             strategyColor := color.new(#15803D, 0)
//         else if currentTradeIsSecondary
//             strategyText := "üîµ SEC"
//             strategyColor := color.new(#00CED1, 0)
//         else if currentTradeIsReentry
//             strategyText := "üü† RE"
//             strategyColor := color.new(#C2410C, 0)
//     else if primaryBlocked
//         if reentryDisabled
//             strategyText := "üü° SEC"
//             strategyColor := color.new(#CA8A04, 0)
//         else
//             strategyText := "üü° S+R"
//             strategyColor := color.new(#CA8A04, 0)
//     else if lastTradeWasProfit
//         strategyText := "‚úÖ ALL"
//         strategyColor := color.new(#15803D, 0)
    
//     table.cell(t, 1, 1, text=strategyText, text_color=color.white, bgcolor=strategyColor, text_size=size.large)
    
//     currentPnL = inPosition ? (close - buyEntry) : 0.0
//     pnlColor = currentPnL > 0 ? color.new(#15803D, 0) : currentPnL < 0 ? color.new(#991B1B, 0) : color.new(#374151, 0)
//     pnlSign = currentPnL > 0 ? "+" : ""
//     table.cell(t, 2, 1, text=pnlSign + str.tostring(currentPnL, "#.##"), text_color=color.white, bgcolor=pnlColor, text_size=size.large)
